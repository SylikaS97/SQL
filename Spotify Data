# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#What is the avg popularity, danceability, and energy by artist and track?
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name

# Which songs have a popularity of 90 and above?
SELECT artist_name , popularity, track_name
FROM spotifydata
GROUP BY popularity HAVING (Popularity)>90

#The average danceability

SELECT AVG(danceability)
FROM spotifydata

#Which songs have a popularity of more than 90 and a song key of more than 5?
SELECT popularity, song_key,artist_name,track_name
FROM spotifydata
WHERE popularity >90 AND song_key >5

# The songs with the highest to lowest energy?
SELECT energy,ARTIST_NAME, track_name
FROM spotifydata
ORDER BY energy DESC

#The loudest song?
SELECT MAX(loudness), artist_name,track_name
FROM spotifydata
